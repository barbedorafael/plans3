ioType|FileName|FileType|FileFormat|FileLoc|DataClass|DataInfo|DataReq|DataEx
derived|aoi_lulc_series|csv time series|txt|"./datasets/observed"|observed|Yearly time series of project file paths to LULC .asc raster maps of the AOI basin in the observation period. |>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous). >> Mandatory fields: >>> "Date": date of record (month and day can be arbitrary). >>> "File": file path to input LULC .asc raster map. Ex: "C:/mydata/lulc_map_01.asc" |sample file
derived|aoi_shru_param|csv data frame|txt|"./datasets/observed"|observed|Data frame of Surface Hydrologic Response Units (SHRU) classes for the AOI basin.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>>"IdSHRU": unique integer number of SHRU class index;>>> "SHRUName": one-word name of SHRU class. >>> All fields of LULC parameters file. >>> All fields of Soils parameter file. >>> "f_EfRootZone": positive real number - factor of reference effective root zone depth in mm, computed as "Porosity" x  "f_RootDepth". |sample file
derived|aoi_shru_series|csv time series|txt|"./datasets/observed"|observed|Yearly time series of project file paths to SHRU .asc raster maps of the AOI basin in the observation period. |>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No missing years allowed. >> Mandatory fields: >>> "Date": date of record (month and day can be arbitrary). >>> "File": file path to SHRU .asc raster maps.|sample file
derived|aoi_slope|raster map|asc|"./datasets/observed"|observed|Raster map of terrain slope for the AOI basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters).  >> Grid cells must be squared. >> Cells values units: degrees.|slope
derived|aoi_twito|raster map|asc|"./datasets/observed"|observed|Raster map of the Topographic Wetness Index (`TWI`) added to the natural log of inverse transmissivity factor for the AOI basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: TWI units.|twi
derived|calib_etpat_series|csv time series|txt|"./datasets/observed"|observed|Daily time series of ET-proxy pattern maps for the calibration basin. |>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD".  >> Note: record gaps are allowed. >> Mandatory fields: >>> "Date": date of record (day can be arbitrary). >>> "File": file path to input etpat .asc raster map. Ex: "C:/..../etpat/calib_etpat_2019-01-01.asc" |sample file
derived|calib_shru|raster map|asc|"./datasets/observed"|observed|Raster map of Surface Hydrologic Response Units (SHRU) for the calibration basin. Each SHRU class receives an index number defined in the shru_calib_param file. |>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: class index.|shru
derived|calib_shru_param|csv data frame|txt|"./datasets/observed"|observed|Data frame of Surface Hydrologic Response Units (SHRU) classes for the calibration basin.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>>"IdSHRU": unique integer number of SHRU class index;>>> "SHRUName": one-word name of SHRU class. >>> All fields of LULC parameters file. >>> All fields of Soils parameter file. >>> "f_EfRootZone": positive real number - factor of reference effective root zone depth in mm, computed as "Porosity" x  "f_RootDepth". |sample file
derived|calib_slope|raster map|asc|"./datasets/observed"|observed|Raster map of terrain slope for the calibration basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: degrees.|slope
derived|aoi_fto|raster map|asc|"./datasets/observed"|observed|Raster map of local unitless factor of basin soil transmissivity `To` of AOI basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: unitless.|fto
derived|calib_fto|raster map|asc|"./datasets/observed"|observed|Raster map of local unitless factor of basin soil transmissivity `To` of Calib basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: unitless.|fto
derived|calib_twito|raster map|asc|"./datasets/observed"|observed|Raster map of the Topographic Wetness Index (`TWI`) added to the natural log of inverse transmissivity factor for the calibration basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: TWI units.|twi
derived|calib_basin_histograms|csv data frame|txt|"./datasets/observed"|observed|Data frame of histograms of TWI (rows) and SHRU index (columns) of CALIB basin. Values are in counted cells.|>> Field separator: semicolon ";". >> Decimal separator: period ".".  >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store positive integer values of the histogram of TWI within each SHRU.|sample file
extracted|aoi_basin_histograms_YYYY-MM-DD|csv data frame|txt|"./datasets/observed"|observed|Data frame of histograms of TWI (rows) and SHRU index (columns) of AOI basin in date YYYY-MM-DD. Values are in counted cells.|>> Field separator: semicolon ";". >> Decimal separator: period ".".  >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store positive integer values of the histogram of TWI within each SHRU.|sample file
derived|calib_histograms|csv data frame|txt|"./datasets/observed"|observed|Data frame of histograms of TWI (rows) and SHRU index (columns) of CALIB full extension. Values are in counted cells.|>> Field separator: semicolon ";". >> Decimal separator: period ".".  >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store positive integer values of the histogram of TWI within each SHRU.|sample file
derived|calib_etpat_zmaps|csv time series|txt|"./datasets/observed"|observed|Daily time series of ET-proxy pattern Z-maps for the calibration basin. |>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD".  >> Note: record gaps are allowed. >> Mandatory fields: >>> "Date": date of record (day can be arbitrary). >>> "File": file path to input etpat zmap csv data frame. Ex: "C:/..../etpat/calib_etpat_2019-01-01_zmap.txt" |sample file
extracted|aoi_histograms_YYYY-MM-DD|csv data frame|txt|"./datasets/observed"|observed|Data frame of histograms of TWI (rows) and SHRU index (columns) of AOI basin  in year YYYY. Values are in counted cells.|>> Field separator: semicolon ";". >> Decimal separator: period ".".  >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store positive integer values of the histogram of TWI within each SHRU.|sample file
extracted|aoi_lulc_YYYY-MM-DD|raster map|asc|"./datasets/observed/lulc"|observed|Raster map of LULC of AOI basin in year YYYY.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: class index.|lulc
extracted|aoi_shru_YYYY-MM-DD|raster map|asc|"./datasets/observed/shru"|observed|Raster map of SHRU of AOI basin in year YYYY. This file is extracted to the `shru` folder during the derivation of the `aoi_shru_sreies` file.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: class index.|shru
extracted|calib_etpat_YYYY-MM-DD|raster map|asc|"./datasets/observed/lulc"|observed|Raster map of ET pattern of calibration basin in month YYYY-MM.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: any units.|etpat
input|aoi_basin|raster map|asc|"./datasets/observed"|observed|Boolean raster map of the area of AOI (Area Of Interest) basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: boolean (1.0 and 0.0). >>  Cells must be 1.0 where the the area is TRUE and 0.0 where the area is FALSE.|basin
input|aoi_dem|raster map|asc|"./datasets/observed"|observed|Raster map of Digital Elevation Model (DEM) of the AOI basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters).  >> Grid cells must be squared.|dem
input|aoi_lulc_param|csv data frame|txt|"./datasets/observed"|observed|Data frame of LULC classes for the AOI basin.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>>"IdLULC": unique integer number of LULC class index.>>> "LULCName": one-word name of LULC class.>>> "LULCAlias": one-word alias of LULC class.>>>"f_Canopy":  positive real number - unitless factor of reference effective canopy storage capacity. >>> "f_Surface": positive real  number - unitless factor reference effective surface storage capacity.  >>>"f_RootDepth": positive real  number - unitless factor of reference root zone depth. >>>"f_IRA": positive real  number - unitless factor of irrigation input that is intercepted by canopy. >>> "f_IRI": positive real number - unitless factor of irrigation input that is not intercepted by canopy.>>>"CanopySeason": list of four months aliases separated by "&" (ex: Sep & Nov & Feb & Jun). The months order must reflect the starting phases of canopy growth, peak, decay and dormancy.  If seasonality is not allowed must store "none" code.>>>"f_CanopyBackg": positive real number lower or equal to 1.0 - unitless factor of canopy background value during dormancy period.>>>"C_USLE": positive real number - unitless factor C of soil cover of USLE. >>> "P_USLE": positive real number - unitless factor P of conservation practices of USLE. >>> "ConvertTo": list of LULC classes allowed to conversion separated by "&". If conversion is not allowed must store "none" code. >>> "ColorLULC": CSS color name available in Matplotlib (ex: "blue") or hex code of color (ex: "#5234eb").|sample file
input|aoi_lulc_series_input|csv time series|txt|"./datasets/observed"|observed|Yearly time series of input file paths to LULC .asc raster maps of the AOI basin in the observation period. |>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD".  >> No record gaps are allowed (the time series must be continuous). >> Mandatory fields: >>> "Date": date of record (month and day can be arbitrary). >>> "File": file path to input LULC .asc raster map. Ex: "C:/mydata/lulc_map_01.asc" |sample file
input|aoi_series|csv time series|txt|"./datasets/observed"|observed|Long term daily time series of climatic data for the AOI basin.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous). >> Mandatory fields: >>> "Date": date of record. >>> "Prec": daily accumulated precipitation in mm. >>> "Temp": mean daily temperature in Celsius. |sample file
input|aoi_twi|raster map|asc|"./datasets/observed"|observed|Raster map of the Topographic Wetness Index (TWI) for the AOI basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: TWI units.|twi
input|aoi_soils|raster map|asc|"./datasets/observed"|observed|Raster map of soils for the AOI (Area Of Interest) basin. Each soil class receives an index number defined in the soils_calib_param file. |>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: class index.|soils
input|aoi_soils_param|csv data frame|txt|"./datasets/observed"|observed|Data frame of soil classes for the AOI basin.|>> Field separator: semicolon ";". >> Decimal separator: period  ".". >> Mandatory fields: >>> "IdSoil": unique integer number of soil class index.>>> "SoilName": one-word name of soil class. >>> "SoilAlias": one-word alias of soil class.  >>>"f_To":  positive real number - unitless factor of basin average effective soil transmissivity.  >>>"f_Ksat":  positive real number - unitless factor of reference effective saturated hydraulic conductivity. >>> "Porosity": positive real number - value of soil porosity. >>> "K_USLE": soil erosivity index in ton h MJ-1 mm-1 of USLE. >> Optional fields: >>> "ColoSoil": CSS color name available in matplotlib (ex: "blue") or hex code of color (ex: "#5234eb").|sample file
input|calib_basin|raster map|asc|"./datasets/observed"|observed|Boolean raster map of the area of calibration basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters).  >> Grid cells must be squared. >> Cells values units: boolean (1.0 and 0.0). >>  Cells must be 1.0 where the the area is TRUE and 0.0 where the area is FALSE.|basin
input|calib_twi|raster map|asc|"./datasets/observed"|observed|Raster map of the Topographic Wetness Index (`TWI`) for the calibration basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: TWI units.|twi
input|calib_dem|raster map|asc|"./datasets/observed"|observed|Raster map of Digital Elevation Model (DEM) of the calibration basin.|>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters).  >> Grid cells must be squared.|dem
input|calib_etpat_series_input|csv time series|txt|"./datasets/observed"|observed|Monthly time series of ET-proxy pattern maps for the calibration basin. |>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD".  >> No record gaps are allowed (the time series must be continuous). >> Mandatory fields: >>> "Date": date of record (day can be arbitrary). >>> "File": file path to input etpat .asc raster map. Ex: "C:/mydata/calib_etpat_01.asc" |sample file
input|calib_lulc|raster map|asc|"./datasets/observed"|observed|Raster map of LULC (land use and land cover) for the calibration basin and calibration period. Each LULC class receives an index number defined in the lulc_calib_param file |>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: class index.|lulc
input|calib_lulc_param|csv data frame|txt|"./datasets/observed"|observed|Data frame of LULC classes for the calibration basin.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>>"IdLULC": unique integer number of LULC class index.>>> "LULCName": one-word name of LULC class.>>> "LULCAlias": one-word alias of LULC class.>>>"f_Canopy":  positive real number - unitless factor of reference effective canopy storage capacity. >>> "f_Surface": positive real  number - unitless factor reference effective surface storage capacity.  >>>"f_RootDepth": positive real  number - unitless factor of reference root zone depth. >>>"f_IRA": positive real  number - unitless factor of irrigation input that is intercepted by canopy. >>> "f_IRI": positive real number - unitless factor of irrigation input that is not intercepted by canopy.>>>"CanopySeason": list of four months aliases separated by "&" (ex: Sep & Nov & Feb & Jun). The months order must reflect the starting phases of canopy growth, peak, decay and dormancy.  If seasonality is not allowed must store "none" code.>>>"f_CanopyBackg": positive real number lower or equal to 1.0 - unitless factor of canopy background value during dormancy period.>>>"C_USLE": positive real number - unitless factor C of soil cover of USLE. >>> "P_USLE": positive real number - unitless factor P of conservation practices of USLE. >>> "ConvertTo": list of LULC classes allowed to conversion separated by "&". If conversion is not allowed must store "none" code. >>> "ColorLULC": CSS color name available in Matplotlib (ex: "blue") or hex code of color (ex: "#5234eb").|sample file
input|calib_series|csv time series|txt|"./datasets/observed"|observed|Daily time series of climatic and hydrologic data for the calibration basin in the calibration period.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous). >> Mandatory fields: >>> "Date": date of record. >>> "Prec": daily accumulated precipitation in mm. >>> "Temp": mean daily temperature in Celsius. >>> "IRA": mean daily flow of irrigation intercepted by the canopy in mm/day. >>> "IRI": mean daily flow of irrigation not intercepted by the canopy in mm/day. >>> "Q": mean daily specific flow at basin outlet in mm/day. >> Optional fields: >>> "Flow": mean daily flow at the basin outlet in m3/seconds (Note: Flow [m3/s] = Q [mm/day] * BasinArea [m2]/ (86400 [s/day] * 1000 [mm/m]) ).|sample file
input|calib_soils|raster map|asc|"./datasets/observed"|observed|Raster map of soils for the calibration basin. Each soil class receives an index number defined in the soils_calib_param file. |>> Must match the same size (rows and columns) of other related raster maps. >> CRS must be projected (coordinates in meters). >> Grid cells must be squared. >> Cells values units: class index.|soils
input|calib_soils_param|csv data frame|txt|"./datasets/observed"|observed|Data frame of soil classes for the calibration basin.|>> Field separator: semicolon ";". >> Decimal separator: period  ".". >> Mandatory fields: >>> "IdSoil": unique integer number of soil class index.>>> "SoilName": one-word name of soil class. >>> "SoilAlias": one-word alias of soil class.  >>>"f_To":  positive real number - unitless factor of basin average effective soil transmissivity.  >>>"f_Ksat":  positive real number - unitless factor of reference effective saturated hydraulic conductivity. >>> "Porosity": positive real number - value of soil porosity. >>> "K_USLE": soil erosivity index in ton h MJ-1 mm-1 of USLE. >> Optional fields: >>> "ColoSoil": CSS color name available in matplotlib (ex: "blue") or hex code of color (ex: "#5234eb").|sample file
input|hydro_param|csv data frame|txt|"./datasets/observed"|observed|>> Data frame of hydrology parameter set and ranges. >> Parameters are: >> 1) `m` - positive real value of effective transmissivity decay coefficient in mm; >> 2) `qo` -positive real value of maximal baseflow when D=0 in mm/d;  >> 3) `cpmax` - positive real value of effective unitary canopy water storage capacity in mm; >> 4) `sfmax` - positive real value of effective unitary surface water storage capacity in mm;  >> 5) `erz` - positive real value of effective unitary root zone depth in mm.  >> 6) `ksat` - positive real value of effective unitary saturated hydraulic conductivity in mm/d; >> 7) `c` - positive real value of scaling parameter for PET model in Celcius;>> 8) `lat` - real value of latitude in degrees for PET model;>> 9) `k` - positive real value of Nash Cascade residence time in days; >> 10) `n` - positive real value of equivalent number of reservoirs in Nash Cascade;|>> Field separator: semicolon ";". >> Decimal separator: period  ".". >> Mandatory fields: >>> "Parameter": parameter standard names: "m", "qo", "cpmax",  "dpmax", "erz", "ksat", "c","lat", "k", "n". >>> "Set": positive real number of parameter set (updated by calibration). >>> "Min": positive real number of lower bound of parameter space. >>> "Max": positive real number of upper bound of parameter space. |sample file
output|map_Cpy_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_Cpy" or user defined|computed|Data frame of Cpy values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_D_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_D" or user defined|computed|Data frame of Dps values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_Dps_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_Dps" or user defined|computed|Data frame of Dps values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_ET_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_ET" or user defined|computed|Data frame of ET values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_Evc_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_Evc" or user defined|computed|Data frame of Evc values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_Evd_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_Evd" or user defined|computed|Data frame of Evd values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_Inf_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_Inf" or user defined|computed|Data frame of Inf values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_Qv_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_Qv" or user defined|computed|Data frame of Qv values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_R_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_R" or user defined|computed|Data frame of R values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_TF_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_TF" or user defined|computed|Data frame of TF values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_Tpgw_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_Tpgw" or user defined|computed|Data frame of Tpgw values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_Tpun_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_Tpun" or user defined|computed|Data frame of Tpun values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|map_Unz_YYYY-MM-DD|csv data frame|txt|default output directory in "./runbin … /maps_Unz" or user defined|computed|Data frame of Unz values given TWI (rows) and SHRU index (columns) - the Zmap of the variable.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store the values of the mapped values in positive real numbers.|none
output|sim_histograms|csv data frame|txt|default output directory in "./runbin … " or user defined|computed|Data frame of histograms of TWI (rows) and SHRU index (columns). Values are in counted cells.|>> Field separator: semicolon ";". >> Decimal separator: period ".".  >> Mandatory fields: >>> "TWI\SHRU": TWI positive real values of TWI histogram bins. >> The "TWI\SHRU" field must be the first field. >>  The following fields after "TWI\SHRU" must be the index number values of each SHRU class and store positive integer values of the histogram of TWI within each SHRU.|none
output|sim_maps_Cpy|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of Cpy.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_D|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of Dps.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_ET|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of ET.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_Evc|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of Evc.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_Evd|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of Evd.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_Inf|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of |>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_Qv|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of Qv.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_R|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of R.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_Sfs|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of Sfs.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_TF|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of TF.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_Tpgw|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of Tpgw.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_Tpun|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of Tpun.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_maps_Unz|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Daily time series of output file paths to the Z-maps of Unz.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous).>> Mandatory fields: >>> "Date": date of record. >>> "File": file path to output Z-map .txt file.|none
output|sim_parameters|csv data frame|txt|default output directory in "./runbin … " or user defined|computed|Data frame of hydrology parameters set used in simulation|>> Field separator: semicolon ";". >> Decimal separator: period  ".". >> Mandatory fields: >>> "Parameter": parameter standard names: "m", "ksat", "qo", "a", "c", "k", "n". >>> "Set": positive real number of parameter set (updated by calibration). >>> "Min": positive real number of lower bound of parameter space. >>> "Max": positive real number of upper bound of parameter space. |none
output|sim_series|csv time series|txt|default output directory in "./runbin … " or user defined|computed|Simulated daily time series of output hydrologic global variables.|>> Field separator: semicolon ";". >> Decimal separator: period ".". >> Date format: "YYYY-MM-DD". >> No record gaps are allowed (the time series must be continuous). >> Mandatory fields: >>> "Date": date of record. >>> "Prec": daily accumulated precipitation in mm (from input). >>> "Temp": mean daily temperature in Celsius (from input). >>> "PET": Potential evapotranspiration water storage in mm. >>> "D": Soil water storage deficit for full saturation by water table in mm. >>> "Cpy": Canopy water storage in mm. >>> "TF": Throughfall water flow in mm/d. >>> "Sfs": Surface water storage in mm. >>> "R": Runoff water flow in mm/d. >>> "Inf": Infiltration water flow in mm/d. >>> "Unz": Unsaturated zone water storage in mm. >>> "Qv": Recharge water flow in mm/d. >>> "Evc": Evaporation from canopy water flow in mm/d. >>> "Evd": Evaporation from surface depression water flow in mm/d. >>> "Tpun": Plant transpiration from unsaturated zone water flow in mm/d. >>> "Tpgw": Plant transpiration from groundwater water flow in mm/d. >>>"ET": Evapotranspiartion water flow in mm/d. >>>"Qb": basin baseflow in mm/d. >>> "Qs": basin stormflow in mm/d. >>> "Q": basin water flow in mm/d. >>> "Flow": basin water flow in m3/s (note: Flow [m3/s]= Q [mm/d] * BasinArea [m2] / (86400 [s/d] * 1000 [mm/m])).  |none
